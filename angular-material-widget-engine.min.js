function mdWidgetEngineColumnDirective(){return{scope:!1,templateUrl:"/src/components/widgetEngine/templates/widgetEngineColumn.html",controller:function($scope,$element,$attrs,$transclude,$document,$timeout){$scope.widgetEngineClientRect={};var mouseMove=function(e){var newX=e.clientX-$scope.widgetEngineClientRect.left+16,differenceXPercentage=(newX-$element[0].children[0].offsetLeft)/$scope.widgetEngineClientRect.width*100;$scope.configuration.columns[$scope.columnIndex+1].size-(differenceXPercentage-$scope.column.size)<=15||$scope.configuration.columns[$scope.columnIndex].size<=15&&differenceXPercentage<=15||($scope.configuration.columns[$scope.columnIndex+1]&&($scope.configuration.columns[$scope.columnIndex+1].size-=differenceXPercentage-$scope.column.size),$scope.column.size=differenceXPercentage,$timeout(function(){}))},mouseUp=function(){$document.unbind("mouseup",mouseUp),$document.unbind("mousemove",mouseMove),$scope.callback("resize",$scope.configuration)};$scope.setupColumnResizing=function(e){event.preventDefault(),$document.on("mouseup",mouseUp),$document.on("mousemove",mouseMove),$scope.widgetEngineClientRect=$element.parent().parent()[0].getBoundingClientRect()},$scope.addNewColumn=function(){var newColumn=angular.copy($scope.configuration.columns[$scope.columnIndex]);newColumn.widgets=[],newColumn.size="",$timeout(function(){$scope.configuration.columns.splice($scope.columnIndex+1,0,newColumn)})},$scope.removeEmptyColumn=function(){$scope.configuration.columns[$scope.columnIndex+1]&&$scope.configuration.columns[$scope.columnIndex-1]?($scope.configuration.columns[$scope.columnIndex+1].size+=$scope.column.size/2,$scope.configuration.columns[$scope.columnIndex-1].size+=$scope.column.size/2):$scope.configuration.columns[$scope.columnIndex+1]?$scope.configuration.columns[$scope.columnIndex+1].size+=$scope.column.size:$scope.configuration.columns[$scope.columnIndex-1].size&&($scope.configuration.columns[$scope.columnIndex-1].size+=$scope.column.size);var totalWidth=($scope.configuration.columns.splice($scope.columnIndex,1),0);$scope.configuration.columns.forEach(function(c){totalWidth+=c.size})},$element.on("dragenter",function(event){$element.addClass("md-widget-engine-column-dashed"),event.stopPropagation()}),$element.on("dragover",function(event){$element.addClass("md-widget-engine-column-dashed"),event.stopPropagation(),event.preventDefault&&event.preventDefault()}),$element.on("dragleave",function(event){$element.removeClass("md-widget-engine-column-dashed"),event.stopPropagation()}),$element.on("drop",function(event){var draggerPosition=(event.dataTransfer.getData("Text")||event.dataTransfer.getData("text/plain")).split("::");if($scope.columnIndex==draggerPosition[0])return void $element.removeClass("md-widget-engine-column-dashed");var removedWidget=($scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]],$scope.configuration.columns[draggerPosition[0]].widgets.splice(draggerPosition[1],1)[0]);$scope.configuration.columns[$scope.columnIndex].widgets.push(removedWidget),$element.removeClass("md-widget-engine-column-dashed"),$document.find(".md-widget-engine-column-dashed").removeClass("md-widget-engine-column-dashed"),$timeout(function(){$scope.$apply(),$scope.callback("update",$scope.configuration)},150)})},link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDirective(){return{scope:!1,replace:!0,templateUrl:"/src/components/widgetEngine/templates/widgetEngineWidgetTile.html",controller:mdWidgetEngineWidgetTileDirectiveController(),link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDragger(){return function($scope,$element,$attrs,$transclude){$element.attr("draggable","true"),$element.on("dragstart dragend",function(event){$scope.widget.sticky||(event=event.originalEvent||event,event._initiatedByDragger=!0)})}}function mdWidgetEngineDirective(){return{scope:{configuration:"=configuration",callback:"=callback"},templateUrl:"/src/components/widgetEngine/templates/widgetEngine.html",controller:function($scope,$element,$attrs,$transclude,$timeout){$timeout(function(){$scope.configuration=$scope.configuration||{}})},link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDirectiveController(){var _obj={};return _obj._draggedTile=null,_obj.controller=function($scope,$element,$attrs,$transclude,$mdDialog,$timeout,$sce,$document){$scope.fullscreen=!1,$scope.widget._internalSettings={},$scope.widget._internalSettings.trustedURL=$sce.trustAsResourceUrl($scope.widget.content),$scope.widget._internalSettings.trustedHTML=$sce.trustAsHtml($scope.widget.content),$scope.toggleFullscreen=function(){$scope.fullscreen=!$scope.fullscreen},$scope.toggleSticky=function(){$scope.widget.sticky=!$scope.widget.sticky},$scope.removeWidget=function(e){var confirm=$mdDialog.confirm().title("Are you sure?").textContent('Remove the "'+$scope.widget.title+'" widget?').ariaLabel("Are you sure you want to remove the widget").targetEvent(e).ok("Yes").cancel("Cancel");$mdDialog.show(confirm).then(function(){$element.addClass("md-widget-engine-widget-remove"),$timeout(function(){$scope.configuration.columns[$scope.columnIndex].widgets.splice($scope.widgetIndex,1)},200)},function(){})},$element.on("dragstart",function(event){if(event.stopPropagation(),!event._initiatedByDragger||$scope.fullscreen)return event.dataTransfer.types&&event.dataTransfer.types.length||event.preventDefault(),void event.stopPropagation();$element.addClass("md-widget-engine-widget-moving");var draggerPosition=$scope.columnIndex+"::"+$scope.widgetIndex;event.dataTransfer.setData("Text",draggerPosition),event.dataTransfer.effectAllowed="move",event.dataTransfer.dropEffect="move",event.dataTransfer.setDragImage($element[0],20,20),_obj._draggedTile=$element}),$element.on("dragenter",function(event){return event.stopPropagation(),!$scope.widget.sticky&&void($element.hasClass("md-widget-engine-widget-moving")||$element.addClass("md-widget-engine-widget-dashed"))}),$element.on("dragover",function(event){return event.stopPropagation(),!$scope.widget.sticky&&void($element.hasClass("md-widget-engine-widget-moving")||($element.addClass("md-widget-engine-widget-dashed"),event.preventDefault&&event.preventDefault()))}),$element.on("dragleave",function(event){return event.stopPropagation(),!$scope.widget.sticky&&void $element.removeClass("md-widget-engine-widget-dashed")}),$element.on("dragend",function(event){return event.stopPropagation(),!$scope.widget.sticky&&(event=event.originalEvent||event,void $element.removeClass("md-widget-engine-widget-moving"))}),$element.on("drop",function(event){if(event.stopPropagation(),$scope.widget.sticky)return!1;var draggerPosition=(event.dataTransfer.getData("Text")||event.dataTransfer.getData("text/plain")).split("::");if($scope.columnIndex!=draggerPosition[0]||$scope.widgetIndex!=draggerPosition[1]){var dropeePosition=[$scope.columnIndex,$scope.widgetIndex],draggerElement=$scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]],dropeeElement=$scope.configuration.columns[dropeePosition[0]].widgets[dropeePosition[1]];$scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]]=dropeeElement,$scope.configuration.columns[dropeePosition[0]].widgets[dropeePosition[1]]=draggerElement,_obj._draggedTile.removeClass("md-widget-engine-widget-dashed"),$element.removeClass("md-widget-engine-widget-dashed"),setTimeout(function(){$scope.$apply(),$scope.callback("update",$scope.configuration)},150)}})},_obj.controller}angular.module("ngMdWidgetEngine",["ngMaterial"]),angular.module("ngMdWidgetEngine").directive("mdWidgetEngineWidgetDragger",mdWidgetEngineWidgetTileDragger).directive("mdWidgetEngineWidgetTile",mdWidgetEngineWidgetTileDirective).directive("mdWidgetEngineColumn",mdWidgetEngineColumnDirective).directive("mdWidgetEngine",mdWidgetEngineDirective),angular.module("ngMdWidgetEngine").run(["$templateCache",function($templateCache){$templateCache.put("/src/components/widgetEngine/templates/widgetEngine.html",'<div class="md-widget-engine-container" ng-if="configuration.columns">\n    <div class="md-widget-engine">\n        <div layout="row" flex style="height: 100%">\n            <md-widget-engine-column \n                ng-repeat="(columnIndex, column) in configuration.columns" \n                column="column" \n                style="background-color: {{column.background}}; width: {{column.size}}%; min-width: 15%;"\n            ></md-widget-engine-column>\n        </div>\n    </div>\n</div><!-- md-widget-engine-container -->'),$templateCache.put("/src/components/widgetEngine/templates/widgetEngineColumn.html",'<div class="md-widget-engine-column" style="height:100%; position:relative">\n    \n    <span class="md-widget-engine-column-resizer" ng-mousedown="setupColumnResizing($event)" ng-show="configuration.columns.length-1 > columnIndex && configuration.resizeableColumns !== false">\n    </span>\n    <div class="md-widget-engine-new-column-handler" ng-show="configuration.columns.length-1 > columnIndex">\n        <div ng-click="addNewColumn()" ng-show="column.widgets.length > 0 && configuration.columns.length < 6 && configuration.dynamicColumns !== false" style="outline: none; border: 0px;">\n            <md-icon class="material-icons md-dark md-24" style="outline: none">add_circle</md-icon>\n            <md-tooltip md-direction="right">Add new column here</md-tooltip>\n        </div>\n        <div ng-click="removeEmptyColumn()" ng-show="column.widgets.length == 0 && configuration.dynamicColumns !== false" style="outline: none; border: 0px;">\n            <md-icon class="material-icons md-dark md-24">remove_circle</md-icon>\n            <md-tooltip md-direction="left">Remove this column</md-tooltip>\n        </div>\n    </div>\n\n    <div class="md-widget-engine-widget-tiles-container">\n        <md-widget-engine-widget-tile ng-repeat="(widgetIndex, widget) in column.widgets" widget="widget" widgetIndex="widgetIndex"></md-widget-engine-widget-tile>\n    </div>\n</div><!-- md-widget-engine-column -->'),$templateCache.put("/src/components/widgetEngine/templates/widgetEngineWidgetTile.html",'<div class="md-widget-engine-widget-tile-container {{fullscreen ? \'md-widget-engine-widget-fullscreen\' : \'\'}}">\n    <div class="md-widget-engine-widget-tile md-whiteframe-2dp">\n\n        <div class="md-widget-engine-widget-tile-title-container">\n            <md-toolbar class="md-whiteframe-2dp">\n                <div class="md-toolbar-tools">\n                    <div class="md-widget-engine-widget-tile-title">\n                        <span style="cursor: pointer" md-widget-engine-widget-dragger>{{widget.title || \'Widget\'}}</span>\n                    </div>\n                    <span flex></span>\n                    <div class="md-widget-engine-widget-tile-controls-container" >\n                        <div class="md-widget-engine-widget-tile-control" ng-mouseup="removeWidget($event)" ng-show="widget.closeControl !== false">\n                            <span class="md-widget-engine-widget-close-control">\n                                <md-icon class="material-icons md-light md-24">\n                                    close\n                                    <md-tooltip md-direction="bottom">Remove this widget</md-tooltip>\n                                </md-icon>\n                            </span>\n                        </div>\n                        <div class="md-widget-engine-widget-tile-control" ng-click="toggleSticky()" ng-show="widget.stickyControl">\n                            <span class="md-widget-engine-widget-sticky-control">\n                                <md-icon class="material-icons md-light md-24" ng-if="!widget.sticky">\n                                    lock_open\n                                    <md-tooltip md-direction="bottom">Make this widget sticky</md-tooltip>\n                                </md-icon>\n                                <md-icon class="material-icons md-light md-24" ng-if="widget.sticky">\n                                    lock\n                                    <md-tooltip md-direction="bottom">Make this widget non-sticky</md-tooltip>\n                                </md-icon>\n                            </span>\n                        </div>\n                        <div class="md-widget-engine-widget-tile-control" ng-click="toggleFullscreen()" ng-show="widget.fullscreenControl !== false">\n                            <span class="md-widget-engine-widget-fullscreen-control">\n                                <md-icon class="material-icons md-light md-24">\n                                    fullscreen\n                                    <md-tooltip md-direction="bottom">Toggle fullscreen mode</md-tooltip>\n                                </md-icon>\n                            </span>\n                        </div>\n                    </div>\n                </div><!-- md-toolbar-tools -->\n            </md-toolbar>\n        </div>\n\n        <div class="md-widget-engine-widget-tile-content-container">\n            <md-content>\n                <div class="md-widget-engine-widget-tile-content resize-vertical" style="min-height:{{widget.minHeight}}px; height:{{widget.minHeight}}; max-height:{{widget.maxHeight}}; position:relative;">\n                    <div ng-switch on="widget.type">\n                        <div ng-switch-when="include">\n                            <ng-include src="widget.content"></ng-include>\n                        </div><!-- ng-switch-when -->\n\n                        <div ng-switch-when="iframe">\n                            <iframe ng-src="{{widget._internalSettings.trustedURL}}" frameborder=0 style="border:0px; width:100%; height:100%"></iframe>\n                        </div><!-- ng-switch-when -->\n\n                        <div ng-switch-when="html">\n                            <div ng-bind-html="widget._internalSettings.trustedHTML"></div>\n                        </div><!-- ng-switch-when -->\n\n                    </div> <!-- ng-switch -->\n                </div>\n            </md-content>    \n        </div>\n\n    </div><!-- md-widget-engine-widget-tile -->\n</div><!-- md-widget-engine-widget-tile-container -->')}]);